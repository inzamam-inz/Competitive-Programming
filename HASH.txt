const ll MOD1 = 1e9 + 7;
const ll MOD2 = 1e7 + 9;
const ll POW1 = 313;
const ll POW2 = 373;

ll HashST[ N ][ 2 ];
ll POWER1[ N ], POWER2[ N ];


void HASH( string &str )
{
      HashST[ 0 ][ 0 ] = HashST[ 0 ][ 1 ] = 0;
      for ( int i = 0; i < str.size(); ++i ) {
            HashST[ i + 1 ][ 0 ] = ( HashST[ i ][ 0 ] * POW1 + str[ i ] ) % MOD1;
            HashST[ i + 1 ][ 1 ] = ( HashST[ i ][ 1 ] * POW2 + str[ i ] ) % MOD2;
      }
}


// Dorkar hote pare
void init()
{
      POWER1[ 0 ] = POWER2[ 0 ] = 1;
      for ( int i = 1; i < N; ++i ) {
            POWER1[ i ] = ( POWER1[ i - 1 ] * POW1 ) % MOD1;
            POWER2[ i ] = ( POWER2[ i - 1 ] * POW2 ) % MOD2;
      }
}