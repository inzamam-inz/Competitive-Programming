Long F[Nn], FI[Nn];

Long PowerMod(Long par1, Long par2, Long par3) {     /* ( par1 ^ par2 ) % par3 */
    Long res = 1;
    par1 %= par3;
    assert(par2 >= 0);

    for ( ; par2; par2 >>= 1) {
        if (par2 & 1) res = res * par1 % par3;
        par1 = par1 * par1 % par3;
    }

    return res;
}

void fact() {
    F[0] = 1;
    FI[0] = PowerMod(F[0], MOD - 2, MOD);

    for (int i = 1; i < Nn; ++i) {
        F[i] = (F[i - 1] * i) % MOD;
        FI[i] = PowerMod(F[i], MOD - 2, MOD);
    }
}

Long nCr(Long x, Long y) {
      if (x < y)   return 0;
      return ((F[x] * ((FI[y] * FI[x - y]) % MOD)) % MOD);
}
