/* Graph Move */
const int fx[] = { +1, -1, +0, +0 };
const int fy[] = { +0, +0, +1, -1 };
const int fx[] = { +0, +0, +1, -1, -1, +1, -1, +1 };   // Kings Move
const int fy[] = { -1, +1, +0, +0, +1, +1, -1, -1 };   // Kings Move
const int fx[] = { -2, -2, -1, -1,  1,  1,  2,  2};    // Knights Move
const int fy[] = { -1,  1, -2,  2, -2,  2, -1,  1};    // Knights Move


/* YesNo */
void YesNo( bool par )
{
      cout << ( par ? "YES\n" : "NO\n" );
}


*/ File Show */
freopen( "input.txt", "r", stdin ); 
freopen( "output.txt", "w", stdout );


/* FastIO */
ios_base::sync_with_stdio( false ); 
cin.tie( NULL );
cout.tie( NULL );


/* Template */
/*   ALLAH is Almighty.....  */

#include <bits/stdc++.h>
using namespace std;

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;

#define pi                                acos( -1.0 )
#define rep( i, a, n )                    for ( ll i = a; i < n; i++ )
#define per( i, a, n )                    for ( ll i = n - 1; i >= a; i-- )
#define ll                                long long
#define all( x )                          ( x ).begin(), ( x ).end()

typedef tree < ll, null_type, less < ll >, rb_tree_tag, tree_order_statistics_node_update > ordered_set;

const ll N = 2e5 + 9;
const ll MOD = 1e9 + 7;


ll n, ans;


void solve( int t )
{
      
}
 
int main()
{
      ios_base::sync_with_stdio( false );
      cin.tie( NULL );
      cout.tie( NULL );
      cout << setprecision( 12 );

      int t = 1;
      //cin >> t;

      for ( int i = 1; i <= t; ++i )   solve( i );

      return 0;
}
